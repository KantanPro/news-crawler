name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: mbstring, xml, zip
        
    - name: Install dependencies
      run: |
        if [ -f composer.json ]; then
          composer install --no-dev --optimize-autoloader
        fi
        
    - name: Run tests
      run: |
        php tests/test-security.php
        php tests/test-standalone.php
        
    - name: Generate translation files
      run: |
        # Generate .mo files from .po files
        if command -v msgfmt &> /dev/null; then
          for po_file in languages/*.po; do
            if [ -f "$po_file" ]; then
              mo_file="${po_file%.po}.mo"
              msgfmt "$po_file" -o "$mo_file"
            fi
          done
        fi
        
    - name: Create distribution package
      run: |
        # Create clean distribution directory
        mkdir -p dist/news-crawler
        
        # Copy plugin files (exclude development files)
        rsync -av --exclude-from='.distignore' . dist/news-crawler/
        
        # Create ZIP file
        cd dist
        zip -r news-crawler-${{ github.ref_name }}.zip news-crawler/
        
    - name: Generate changelog
      id: changelog
      run: |
        # Extract changelog for this version
        if [ -f CHANGELOG.md ]; then
          awk '/^## \[/{if(p) exit; if(/\[${{ github.ref_name }}\]/) p=1} p' CHANGELOG.md > release_notes.md
        else
          echo "Release ${{ github.ref_name }}" > release_notes.md
        fi
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: News Crawler ${{ github.ref_name }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/news-crawler-${{ github.ref_name }}.zip
        asset_name: news-crawler-${{ github.ref_name }}.zip
        asset_content_type: application/zip